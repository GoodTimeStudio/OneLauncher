apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

def versionMajor = "1"
def versionMinor = "0"
version = versionMajor + "." + versionMinor + getBuildNumber()
group= "com.mcgoodtime.onelauncher"
archivesBaseName = "OneLauncher"

compileJava.options.encoding = 'UTF-8'

repositories {
	mavenCentral()
	maven {
		url = 'https://dl.bintray.com/goodtimestudio/maven/'
	}
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    shade 'com.mcgoodtime.gjmlc:gjmlc:1.0.11'
	shade 'com.google.code.gson:gson:2.5'
	shade 'org.apache.commons:commons-lang3:3.4'
	shade 'com.googlecode.soundlibs:jlayer:1.0.1-1'
}

jar {
    configurations.shade.copyRecursive().setTransitive(false).each { artifact ->
        from (zipTree(artifact))
    }

    manifest {
        attributes 'Implementation-Title': 'OneLauncher',
                   'Implementation-Version': version
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

idea.workspace.iws.withXml { provider ->
    def xml = """
        <configuration default="false" name="OneLauncher" type="Application" factoryName="Application">
          <extension name="coverage" enabled="false" merge="false" runner="idea" />
          <option name="MAIN_CLASS_NAME" value="com.mcgoodtime.onelauncher.core.OneLauncher" />
          <option name="VM_PARAMETERS" value="" />
          <option name="PROGRAM_PARAMETERS" value="" />
          <option name="WORKING_DIRECTORY" value="file://\$PROJECT_DIR\$/run" />
          <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
          <option name="ALTERNATIVE_JRE_PATH" />
          <option name="ENABLE_SWING_INSPECTOR" value="false" />
          <option name="ENV_VARIABLES" />
          <option name="PASS_PARENT_ENVS" value="true" />
          <module name="OneLauncher" />
          <envs />
          <method />
        </configuration>
    """

    def runConfig = new XmlParser().parseText(xml)

    provider.asNode().component.each {
        if (it.attribute("name").equals("RunManager")) {
            it.append(runConfig)
        }
    }
}

def getBuildNumber() {
    return "$System.env.BUILD_NUMBER" != "null" ? "." + Integer.parseInt("$System.env.BUILD_NUMBER") : ""
}